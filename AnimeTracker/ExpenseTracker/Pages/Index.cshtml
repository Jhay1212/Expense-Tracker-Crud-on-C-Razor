@page
@model ExpenseTracker.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
    var username = HttpContext.Session.GetString("Username");
    var value = new List<double>();
    var labels = new List<string>();

    foreach (var item in Model.Purchase)
    {
        if (!labels.Contains(item.Category))
        {
            labels.Add(item.Category);
            value.Add(item.ProductPrice);
        }
    }
}

<div class="container py-4">
    <div class="text-center mb-4">
        <h2 class="fw-bold">Welcome @username</h2>
    </div>

    <div class="row mb-4">
        <div class="col-md-4 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-body d-flex flex-column">
                    <a asp-page="/Purchases/Create" class="btn btn-primary mb-3">Add New Purchase</a>
                    <form method="get" class="mb-3">
                        <div class="input-group">
                            <input type="search" class="form-control" asp-for="Search" placeholder="Search a product" name="search" value="@Request.Query["search"]">
                            <button class="btn btn-outline-primary"  type="submit">Search</button>
                        </div>
                    </form>
                    <form method="get">
                        <label for="filter" class="form-label">Filter by</label>
                        <select name="filter" asp-for="Filter" class="form-select mb-2">
                            <option value="price">Price</option>
                            <option value="category">Category</option>
                            <option value="date">Date</option>
                        </select>
                        <button type="submit" class="btn btn-primary w-100">Apply</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-body table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Product Name</th>
                                <th>Product Price</th>
                                <th>Quantity</th>
                                <th>Category</th>
                                <th>Total Price</th>
                                <th>Date Purchased</th>
                                <th>Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Purchase)
                            {
                                <tr>
                                    <td>@item.ProductName</td>
                                    <td>@item.ProductPrice.ToString("C")</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Category</td>
                                    <td>@item.TotalPrice.ToString("C")</td>
                                    <td>@item.DatePurchased.ToShortDateString()</td>
                                    <td>
                                        <a asp-page="/Purchases/Detail" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Details</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <canvas id="myChart" width="400"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>


@* Chartjs section *@
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('myChart');

        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(labels)),
                datasets: [{
                    label: 'Price',
                    data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(value)),
                    backgroundColor: [
                        'rgba(175, 12, 12, 0.5)',
                        'rgba(15, 22, 255, 0.5)',
                        'rgba(150, 212, 152, 0.5)',
                        'rgba(115, 222, 252, 0.5)'
                    ],
                    borderColor: 'rgb(75, 192, 192)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true
            }
        });
    </script>
}
